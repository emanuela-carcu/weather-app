{"ast":null,"code":"\"use strict\";\n\nconst codes = require(\"./codes.json\");\n\nconst supportedLocales = require(\"./supportedLocales.json\");\n\nconst removeDiacritics = require(\"diacritics\").remove;\n\nconst registeredLocales = {};\n/*\n * All codes map to ISO 3166-1 alpha-2\n */\n\nconst alpha2 = {},\n      alpha3 = {},\n      numeric = {},\n      invertedNumeric = {};\ncodes.forEach(function (codeInformation) {\n  const s = codeInformation;\n  alpha2[s[0]] = s[1];\n  alpha3[s[1]] = s[0];\n  numeric[s[2]] = s[0];\n  invertedNumeric[s[0]] = s[2];\n});\n/**\n * @private\n * @param {number} code\n */\n\nfunction formatNumericCode(code) {\n  return String(\"000\" + (code ? code : \"\")).slice(-3);\n}\n/**\n * @private\n * Avoid using obj.hasOwnProperty directly as `hasOwnProperty` could be a\n * property in itself ({ hasOwnProperty: 1 }) and cause weird bugs\n * https://eslint.org/docs/rules/no-prototype-builtins\n */\n\n\nfunction hasOwnProperty(object, property) {\n  return Object.prototype.hasOwnProperty.call(object, property);\n}\n/**\n * @private\n * Pass localeList through a filter and return a newLocaleList obj\n * with the same structure of the old localeList.\n *\n * @param {LocalizedCountryNames} localeList  Local List in raw\n * @param {Function} filter    callback to set filter rule\n * @return {String | String[]} new filtered Local List\n */\n\n\nfunction localeFilter(localeList, filter) {\n  return Object.keys(localeList).reduce(function (newLocaleList, alpha2) {\n    const nameList = localeList[alpha2];\n    newLocaleList[alpha2] = filter(nameList, alpha2);\n    return newLocaleList;\n  }, {});\n}\n/**\n * @private\n * Preserve for getName & getNames\n *\n * @param {GetNameOptions.select} type all | official | alias\n * @param countryNameList  string array of country's\n *                         official name and alias\n * @return {String | String[]} of a country name\n */\n\n\nfunction filterNameBy(type, countryNameList) {\n  switch (type) {\n    case \"official\":\n      return Array.isArray(countryNameList) ? countryNameList[0] : countryNameList;\n\n    case \"all\":\n      return typeof countryNameList === \"string\" ? [countryNameList] : countryNameList;\n\n    case \"alias\":\n      return Array.isArray(countryNameList) ? countryNameList[1] || countryNameList[0] : countryNameList;\n\n    default:\n      throw new TypeError(\"LocaleNameType must be one of these: all, official, alias!\");\n  }\n}\n/**\n * Register countries in browsers' environment:\n * @param {object} localeData\n * @example countries.registerLocale(require(\"i18n-iso-countries/langs/en.json\"));\n * @return void\n */\n\n\nexports.registerLocale = function (localeData) {\n  if (!localeData.locale) {\n    throw new TypeError(\"Missing localeData.locale\");\n  }\n\n  if (!localeData.countries) {\n    throw new TypeError(\"Missing localeData.countries\");\n  }\n\n  registeredLocales[localeData.locale] = localeData.countries;\n};\n/*\n * @param code Alpha-3 code\n * @return Alpha-2 code or undefined\n */\n\n\nfunction alpha3ToAlpha2(code) {\n  return alpha3[code];\n}\n\nexports.alpha3ToAlpha2 = alpha3ToAlpha2;\n/*\n * @param code Alpha-2 code\n * @return Alpha-3 code or undefined\n */\n\nfunction alpha2ToAlpha3(code) {\n  return alpha2[code];\n}\n\nexports.alpha2ToAlpha3 = alpha2ToAlpha3;\n/*\n * @param code Alpha-3 code\n * @return Numeric code or undefined\n */\n\nfunction alpha3ToNumeric(code) {\n  return invertedNumeric[alpha3ToAlpha2(code)];\n}\n\nexports.alpha3ToNumeric = alpha3ToNumeric;\n/*\n * @param code Alpha-2 code\n * @return Numeric code or undefined\n */\n\nfunction alpha2ToNumeric(code) {\n  return invertedNumeric[code];\n}\n\nexports.alpha2ToNumeric = alpha2ToNumeric;\n/*\n * @param code Numeric code\n * @return Alpha-3 code or undefined\n */\n\nfunction numericToAlpha3(code) {\n  const padded = formatNumericCode(code);\n  return alpha2ToAlpha3(numeric[padded]);\n}\n\nexports.numericToAlpha3 = numericToAlpha3;\n/*\n * @param code Numeric code\n * @return Alpha-2 code or undefined\n */\n\nfunction numericToAlpha2(code) {\n  const padded = formatNumericCode(code);\n  return numeric[padded];\n}\n\nexports.numericToAlpha2 = numericToAlpha2;\n/*\n * @param code ISO 3166-1 alpha-2, alpha-3 or numeric code\n * @return ISO 3166-1 alpha-3\n */\n\nfunction toAlpha3(code) {\n  if (typeof code === \"string\") {\n    if (/^[0-9]*$/.test(code)) {\n      return numericToAlpha3(code);\n    }\n\n    if (code.length === 2) {\n      return alpha2ToAlpha3(code.toUpperCase());\n    }\n\n    if (code.length === 3) {\n      return code.toUpperCase();\n    }\n  }\n\n  if (typeof code === \"number\") {\n    return numericToAlpha3(code);\n  }\n\n  return undefined;\n}\n\nexports.toAlpha3 = toAlpha3;\n/*\n * @param code ISO 3166-1 alpha-2, alpha-3 or numeric code\n * @return ISO 3166-1 alpha-2\n */\n\nfunction toAlpha2(code) {\n  if (typeof code === \"string\") {\n    if (/^[0-9]*$/.test(code)) {\n      return numericToAlpha2(code);\n    }\n\n    if (code.length === 2) {\n      return code.toUpperCase();\n    }\n\n    if (code.length === 3) {\n      return alpha3ToAlpha2(code.toUpperCase());\n    }\n  }\n\n  if (typeof code === \"number\") {\n    return numericToAlpha2(code);\n  }\n\n  return undefined;\n}\n\nexports.toAlpha2 = toAlpha2;\n/**\n * @param {string | number | Alpha2Code | Alpha3Code} code\n * @param {String} lang          language for country name\n * @param {GetNameOptions} options\n * @return {String | String[] | undefined}  name\n */\n\nexports.getName = function (code, lang) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (!(\"select\" in options)) {\n    options.select = \"official\";\n  }\n\n  try {\n    const codeMaps = registeredLocales[lang.toLowerCase()];\n    const nameList = codeMaps[toAlpha2(code)];\n    return filterNameBy(options.select, nameList);\n  } catch (err) {\n    return undefined;\n  }\n};\n/**\n * @param {String} lang             language for country names\n * @param {GetNameOptions} options   getNames Options\n * @return {LocalizedCountryNames}  country code\n *                                  mapped to county name\n */\n\n\nexports.getNames = function (lang) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!(\"select\" in options)) {\n    options.select = \"official\";\n  }\n\n  const localeList = registeredLocales[lang.toLowerCase()];\n  if (localeList === undefined) return {};\n  return localeFilter(localeList, function (nameList) {\n    return filterNameBy(options.select, nameList);\n  });\n};\n/*\n * @param name name\n * @param lang language for country name\n * @return ISO 3166-1 alpha-2 or undefined\n */\n\n\nexports.getAlpha2Code = function (name, lang) {\n  const normalizeString = string => string.toLowerCase();\n\n  const areSimilar = (a, b) => normalizeString(a) === normalizeString(b);\n\n  try {\n    const codenames = registeredLocales[lang.toLowerCase()];\n\n    for (const p in codenames) {\n      if (!hasOwnProperty(codenames, p)) {\n        continue;\n      }\n\n      if (typeof codenames[p] === \"string\") {\n        if (areSimilar(codenames[p], name)) {\n          return p;\n        }\n      }\n\n      if (Array.isArray(codenames[p])) {\n        for (const mappedName of codenames[p]) {\n          if (areSimilar(mappedName, name)) {\n            return p;\n          }\n        }\n      }\n    }\n\n    return undefined;\n  } catch (err) {\n    return undefined;\n  }\n};\n/*\n * @param name name\n * @param lang language for country name\n * @return ISO 3166-1 alpha-2 or undefined\n */\n\n\nexports.getSimpleAlpha2Code = function (name, lang) {\n  const normalizeString = string => removeDiacritics(string.toLowerCase());\n\n  const areSimilar = (a, b) => normalizeString(a) === normalizeString(b);\n\n  try {\n    const codenames = registeredLocales[lang.toLowerCase()];\n\n    for (const p in codenames) {\n      if (!hasOwnProperty(codenames, p)) {\n        continue;\n      }\n\n      if (typeof codenames[p] === \"string\") {\n        if (areSimilar(codenames[p], name)) {\n          return p;\n        }\n      }\n\n      if (Array.isArray(codenames[p])) {\n        for (const mappedName of codenames[p]) {\n          if (areSimilar(mappedName, name)) {\n            return p;\n          }\n        }\n      }\n    }\n\n    return undefined;\n  } catch (err) {\n    return undefined;\n  }\n};\n/*\n * @return Object of alpha-2 codes mapped to alpha-3 codes\n */\n\n\nexports.getAlpha2Codes = function () {\n  return alpha2;\n};\n/*\n * @param name name\n * @param lang language for country name\n * @return ISO 3166-1 alpha-3 or undefined\n */\n\n\nexports.getAlpha3Code = function (name, lang) {\n  const alpha2 = exports.getAlpha2Code(name, lang);\n\n  if (alpha2) {\n    return exports.toAlpha3(alpha2);\n  } else {\n    return undefined;\n  }\n};\n/*\n * @param name name\n * @param lang language for country name\n * @return ISO 3166-1 alpha-3 or undefined\n */\n\n\nexports.getSimpleAlpha3Code = function (name, lang) {\n  const alpha2 = exports.getSimpleAlpha2Code(name, lang);\n\n  if (alpha2) {\n    return exports.toAlpha3(alpha2);\n  } else {\n    return undefined;\n  }\n};\n/*\n * @return Object of alpha-3 codes mapped to alpha-2 codes\n */\n\n\nexports.getAlpha3Codes = function () {\n  return alpha3;\n};\n/*\n * @return Object of numeric codes mapped to alpha-2 codes\n */\n\n\nexports.getNumericCodes = function () {\n  return numeric;\n};\n/*\n * @return Array of registered languages\n */\n\n\nexports.langs = function () {\n  return Object.keys(registeredLocales);\n};\n/*\n * @return Array of supported languages\n */\n\n\nexports.getSupportedLanguages = function () {\n  return supportedLocales;\n};\n/*\n * @param code ISO 3166-1 alpha-2, alpha-3 or numeric code\n * @return Boolean\n */\n\n\nexports.isValid = function (code) {\n  if (!code) {\n    return false;\n  }\n\n  const coerced = code.toString().toUpperCase();\n  return hasOwnProperty(alpha3, coerced) || hasOwnProperty(alpha2, coerced) || hasOwnProperty(numeric, coerced);\n};","map":{"version":3,"sources":["E:/Cursuri/WeatherApp-main/WeatherApp-main/node_modules/i18n-iso-countries/index.js"],"names":["codes","require","supportedLocales","removeDiacritics","remove","registeredLocales","alpha2","alpha3","numeric","invertedNumeric","forEach","codeInformation","s","formatNumericCode","code","String","slice","hasOwnProperty","object","property","Object","prototype","call","localeFilter","localeList","filter","keys","reduce","newLocaleList","nameList","filterNameBy","type","countryNameList","Array","isArray","TypeError","exports","registerLocale","localeData","locale","countries","alpha3ToAlpha2","alpha2ToAlpha3","alpha3ToNumeric","alpha2ToNumeric","numericToAlpha3","padded","numericToAlpha2","toAlpha3","test","length","toUpperCase","undefined","toAlpha2","getName","lang","options","select","codeMaps","toLowerCase","err","getNames","getAlpha2Code","name","normalizeString","string","areSimilar","a","b","codenames","p","mappedName","getSimpleAlpha2Code","getAlpha2Codes","getAlpha3Code","getSimpleAlpha3Code","getAlpha3Codes","getNumericCodes","langs","getSupportedLanguages","isValid","coerced","toString"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst codes = require(\"./codes.json\");\nconst supportedLocales = require(\"./supportedLocales.json\");\nconst removeDiacritics = require(\"diacritics\").remove;\nconst registeredLocales = {};\n\n/*\n * All codes map to ISO 3166-1 alpha-2\n */\nconst alpha2 = {},\n  alpha3 = {},\n  numeric = {},\n  invertedNumeric = {};\n\ncodes.forEach(function (codeInformation) {\n  const s = codeInformation;\n  alpha2[s[0]] = s[1];\n  alpha3[s[1]] = s[0];\n  numeric[s[2]] = s[0];\n  invertedNumeric[s[0]] = s[2];\n});\n\n/**\n * @private\n * @param {number} code\n */\nfunction formatNumericCode(code) {\n  return String(\"000\" + (code ? code : \"\")).slice(-3);\n}\n\n/**\n * @private\n * Avoid using obj.hasOwnProperty directly as `hasOwnProperty` could be a\n * property in itself ({ hasOwnProperty: 1 }) and cause weird bugs\n * https://eslint.org/docs/rules/no-prototype-builtins\n */\nfunction hasOwnProperty(object, property) {\n  return Object.prototype.hasOwnProperty.call(object, property);\n}\n\n/**\n * @private\n * Pass localeList through a filter and return a newLocaleList obj\n * with the same structure of the old localeList.\n *\n * @param {LocalizedCountryNames} localeList  Local List in raw\n * @param {Function} filter    callback to set filter rule\n * @return {String | String[]} new filtered Local List\n */\nfunction localeFilter(localeList, filter) {\n  return Object.keys(localeList).reduce(function (newLocaleList, alpha2) {\n    const nameList = localeList[alpha2];\n    newLocaleList[alpha2] = filter(nameList, alpha2);\n    return newLocaleList;\n  }, {});\n}\n\n/**\n * @private\n * Preserve for getName & getNames\n *\n * @param {GetNameOptions.select} type all | official | alias\n * @param countryNameList  string array of country's\n *                         official name and alias\n * @return {String | String[]} of a country name\n */\nfunction filterNameBy(type, countryNameList) {\n  switch (type) {\n    case \"official\":\n      return Array.isArray(countryNameList)\n        ? countryNameList[0]\n        : countryNameList;\n\n    case \"all\":\n      return typeof countryNameList === \"string\"\n        ? [countryNameList]\n        : countryNameList;\n\n    case \"alias\":\n      return Array.isArray(countryNameList)\n        ? countryNameList[1] || countryNameList[0]\n        : countryNameList;\n\n    default:\n      throw new TypeError(\n        \"LocaleNameType must be one of these: all, official, alias!\"\n      );\n  }\n}\n\n/**\n * Register countries in browsers' environment:\n * @param {object} localeData\n * @example countries.registerLocale(require(\"i18n-iso-countries/langs/en.json\"));\n * @return void\n */\nexports.registerLocale = function (localeData) {\n  if (!localeData.locale) {\n    throw new TypeError(\"Missing localeData.locale\");\n  }\n\n  if (!localeData.countries) {\n    throw new TypeError(\"Missing localeData.countries\");\n  }\n\n  registeredLocales[localeData.locale] = localeData.countries;\n};\n\n/*\n * @param code Alpha-3 code\n * @return Alpha-2 code or undefined\n */\nfunction alpha3ToAlpha2(code) {\n  return alpha3[code];\n}\nexports.alpha3ToAlpha2 = alpha3ToAlpha2;\n\n/*\n * @param code Alpha-2 code\n * @return Alpha-3 code or undefined\n */\nfunction alpha2ToAlpha3(code) {\n  return alpha2[code];\n}\nexports.alpha2ToAlpha3 = alpha2ToAlpha3;\n\n/*\n * @param code Alpha-3 code\n * @return Numeric code or undefined\n */\nfunction alpha3ToNumeric(code) {\n  return invertedNumeric[alpha3ToAlpha2(code)];\n}\nexports.alpha3ToNumeric = alpha3ToNumeric;\n\n/*\n * @param code Alpha-2 code\n * @return Numeric code or undefined\n */\nfunction alpha2ToNumeric(code) {\n  return invertedNumeric[code];\n}\nexports.alpha2ToNumeric = alpha2ToNumeric;\n\n/*\n * @param code Numeric code\n * @return Alpha-3 code or undefined\n */\nfunction numericToAlpha3(code) {\n  const padded = formatNumericCode(code);\n  return alpha2ToAlpha3(numeric[padded]);\n}\nexports.numericToAlpha3 = numericToAlpha3;\n\n/*\n * @param code Numeric code\n * @return Alpha-2 code or undefined\n */\nfunction numericToAlpha2(code) {\n  const padded = formatNumericCode(code);\n  return numeric[padded];\n}\nexports.numericToAlpha2 = numericToAlpha2;\n\n/*\n * @param code ISO 3166-1 alpha-2, alpha-3 or numeric code\n * @return ISO 3166-1 alpha-3\n */\nfunction toAlpha3(code) {\n  if (typeof code === \"string\") {\n    if (/^[0-9]*$/.test(code)) {\n      return numericToAlpha3(code);\n    }\n    if (code.length === 2) {\n      return alpha2ToAlpha3(code.toUpperCase());\n    }\n    if (code.length === 3) {\n      return code.toUpperCase();\n    }\n  }\n  if (typeof code === \"number\") {\n    return numericToAlpha3(code);\n  }\n  return undefined;\n}\nexports.toAlpha3 = toAlpha3;\n\n/*\n * @param code ISO 3166-1 alpha-2, alpha-3 or numeric code\n * @return ISO 3166-1 alpha-2\n */\nfunction toAlpha2(code) {\n  if (typeof code === \"string\") {\n    if (/^[0-9]*$/.test(code)) {\n      return numericToAlpha2(code);\n    }\n    if (code.length === 2) {\n      return code.toUpperCase();\n    }\n    if (code.length === 3) {\n      return alpha3ToAlpha2(code.toUpperCase());\n    }\n  }\n  if (typeof code === \"number\") {\n    return numericToAlpha2(code);\n  }\n  return undefined;\n}\nexports.toAlpha2 = toAlpha2;\n\n/**\n * @param {string | number | Alpha2Code | Alpha3Code} code\n * @param {String} lang          language for country name\n * @param {GetNameOptions} options\n * @return {String | String[] | undefined}  name\n */\nexports.getName = function (code, lang, options = {}) {\n  if (!(\"select\" in options)) {\n    options.select = \"official\";\n  }\n  try {\n    const codeMaps = registeredLocales[lang.toLowerCase()];\n    const nameList = codeMaps[toAlpha2(code)];\n    return filterNameBy(options.select, nameList);\n  } catch (err) {\n    return undefined;\n  }\n};\n\n/**\n * @param {String} lang             language for country names\n * @param {GetNameOptions} options   getNames Options\n * @return {LocalizedCountryNames}  country code\n *                                  mapped to county name\n */\nexports.getNames = function (lang, options = {}) {\n  if (!(\"select\" in options)) {\n    options.select = \"official\";\n  }\n  const localeList = registeredLocales[lang.toLowerCase()];\n  if (localeList === undefined) return {};\n  return localeFilter(localeList, function (nameList) {\n    return filterNameBy(options.select, nameList);\n  });\n};\n\n/*\n * @param name name\n * @param lang language for country name\n * @return ISO 3166-1 alpha-2 or undefined\n */\nexports.getAlpha2Code = function (name, lang) {\n  const normalizeString = (string) => string.toLowerCase();\n  const areSimilar = (a, b) => normalizeString(a) === normalizeString(b);\n\n  try {\n    const codenames = registeredLocales[lang.toLowerCase()];\n    for (const p in codenames) {\n      if (!hasOwnProperty(codenames, p)) {\n        continue;\n      }\n      if (typeof codenames[p] === \"string\") {\n        if (areSimilar(codenames[p], name)) {\n          return p;\n        }\n      }\n      if (Array.isArray(codenames[p])) {\n        for (const mappedName of codenames[p]) {\n          if (areSimilar(mappedName, name)) {\n            return p;\n          }\n        }\n      }\n    }\n    return undefined;\n  } catch (err) {\n    return undefined;\n  }\n};\n\n/*\n * @param name name\n * @param lang language for country name\n * @return ISO 3166-1 alpha-2 or undefined\n */\nexports.getSimpleAlpha2Code = function (name, lang) {\n  const normalizeString = (string) => removeDiacritics(string.toLowerCase());\n  const areSimilar = (a, b) => normalizeString(a) === normalizeString(b);\n\n  try {\n    const codenames = registeredLocales[lang.toLowerCase()];\n    for (const p in codenames) {\n      if (!hasOwnProperty(codenames, p)) {\n        continue;\n      }\n      if (typeof codenames[p] === \"string\") {\n        if (areSimilar(codenames[p], name)) {\n          return p;\n        }\n      }\n      if (Array.isArray(codenames[p])) {\n        for (const mappedName of codenames[p]) {\n          if (areSimilar(mappedName, name)) {\n            return p;\n          }\n        }\n      }\n    }\n    return undefined;\n  } catch (err) {\n    return undefined;\n  }\n};\n\n/*\n * @return Object of alpha-2 codes mapped to alpha-3 codes\n */\nexports.getAlpha2Codes = function () {\n  return alpha2;\n};\n\n/*\n * @param name name\n * @param lang language for country name\n * @return ISO 3166-1 alpha-3 or undefined\n */\nexports.getAlpha3Code = function (name, lang) {\n  const alpha2 = exports.getAlpha2Code(name, lang);\n  if (alpha2) {\n    return exports.toAlpha3(alpha2);\n  } else {\n    return undefined;\n  }\n};\n\n/*\n * @param name name\n * @param lang language for country name\n * @return ISO 3166-1 alpha-3 or undefined\n */\nexports.getSimpleAlpha3Code = function (name, lang) {\n  const alpha2 = exports.getSimpleAlpha2Code(name, lang);\n  if (alpha2) {\n    return exports.toAlpha3(alpha2);\n  } else {\n    return undefined;\n  }\n};\n\n/*\n * @return Object of alpha-3 codes mapped to alpha-2 codes\n */\nexports.getAlpha3Codes = function () {\n  return alpha3;\n};\n\n/*\n * @return Object of numeric codes mapped to alpha-2 codes\n */\nexports.getNumericCodes = function () {\n  return numeric;\n};\n\n/*\n * @return Array of registered languages\n */\nexports.langs = function () {\n  return Object.keys(registeredLocales);\n};\n\n/*\n * @return Array of supported languages\n */\nexports.getSupportedLanguages = function () {\n  return supportedLocales;\n};\n\n/*\n * @param code ISO 3166-1 alpha-2, alpha-3 or numeric code\n * @return Boolean\n */\nexports.isValid = function (code) {\n  if (!code) {\n    return false;\n  }\n\n  const coerced = code.toString().toUpperCase();\n  return (\n    hasOwnProperty(alpha3, coerced) ||\n    hasOwnProperty(alpha2, coerced) ||\n    hasOwnProperty(numeric, coerced)\n  );\n};\n"]},"metadata":{},"sourceType":"script"}